{"version":3,"sources":["src/gatsby-node.js"],"names":["axios","require","crypto","queryString","exports","sourceNodes","actions","username","Error","createNode","articles","params","stringify","res","get","headers","pragma","accept","data","article","articleResult","id","articleData","push","forEach","jsonString","JSON","gatsbyNode","Object","assign","parent","children","internal","type","contentDigest","createHash","update","digest"],"mappings":";;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,cAAD,CAA3B;;AAEAG,OAAO,CAACC,WAAR,GAAsB,OAAO;AAAEC,EAAAA;AAAF,CAAP,EAAoB;AAAEC,EAAAA;AAAF,CAApB,KAAqC;AACzD,MAAI,CAACA,QAAL,EAAe;AACb,UAAM,IAAIC,KAAJ,CAAU,uDAAV,CAAN;AACD;;AAED,QAAM;AAAEC,IAAAA;AAAF,MAAiBH,OAAvB;AAEA,QAAMI,QAAQ,GAAG,EAAjB;AAEA,QAAMC,MAAM,GAAGR,WAAW,CAACS,SAAZ,CAAsB;AACnCL,IAAAA;AADmC,GAAtB,CAAf,CATyD,CAazD;;AACA,QAAMM,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,+BAA8BH,MAAO,EAAhD,EAAmD;AACnEI,IAAAA,OAAO,EAAE;AACP,uBAAiB,UADV;AAEPC,MAAAA,MAAM,EAAE,UAFD;AAGPC,MAAAA,MAAM,EACJ,wHAJK;AAKP,yBAAmB,mBALZ;AAMP,yBAAmB,4BANZ;AAOP,mCAA6B;AAPtB;AAD0D,GAAnD,CAAlB,CAdyD,CA0BzD;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWL,GAAjB,CA3ByD,CA6BzD;;AACA,OAAK,MAAMM,OAAX,IAAsBD,IAAtB,EAA4B;AAC1B;AACA,UAAME,aAAa,GAAG,MAAMpB,KAAK,CAC9B,+BAA8BmB,OAAO,CAACE,EAAG,EADX,CAAjC,CAF0B,CAK1B;;AACA,UAAMC,WAAW,GAAG,MAAMF,aAAa,CAACF,IAAxC;AACAR,IAAAA,QAAQ,CAACa,IAAT,CAAc,EAAE,GAAGJ,OAAL;AAAc,SAAGG;AAAjB,KAAd;AACD;;AAEDZ,EAAAA,QAAQ,CAACc,OAAT,CAAiBL,OAAO,IAAI;AAC1B,UAAMM,UAAU,GAAGC,IAAI,CAACd,SAAL,CAAeO,OAAf,CAAnB;AAEA,UAAMQ,UAAU,GAAG;AACjBR,MAAAA,OAAO,EAAES,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,OAAlB,CADQ;AAEjBE,MAAAA,EAAE,EAAG,GAAEF,OAAO,CAACE,EAAG,EAFD;AAGjBS,MAAAA,MAAM,EAAE,YAHS;AAIjBC,MAAAA,QAAQ,EAAE,EAJO;AAKjBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,aADE;AAERC,QAAAA,aAAa,EAAEhC,MAAM,CAClBiC,UADY,CACD,KADC,EAEZC,MAFY,CAELX,UAFK,EAGZY,MAHY,CAGL,KAHK;AAFP;AALO,KAAnB;AAcA5B,IAAAA,UAAU,CAACkB,UAAD,CAAV;AACD,GAlBD;AAmBD,CA3DD","sourcesContent":["const axios = require(\"axios\");\r\nconst crypto = require(\"crypto\");\r\nconst queryString = require(\"query-string\");\r\n\r\nexports.sourceNodes = async ({ actions }, { username }) => {\r\n  if (!username) {\r\n    throw new Error(\"You must provide a `username` to `gatsby-source-dev`.\");\r\n  }\r\n\r\n  const { createNode } = actions;\r\n\r\n  const articles = [];\r\n\r\n  const params = queryString.stringify({\r\n    username\r\n  });\r\n\r\n  // eslint-disable-next-line no-await-in-loop\r\n  const res = await axios.get(`https://dev.to/api/articles?${params}`, {\r\n    headers: {\r\n      \"cache-control\": \"no-cache\",\r\n      pragma: \"no-cache\",\r\n      accept:\r\n        \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3\",\r\n      \"accept-encoding\": \"gzip, deflate, br\",\r\n      \"accept-language\": \"en-GB,en-US;q=0.9,en;q=0.8\",\r\n      \"upgrade-insecure-requests\": 1\r\n    }\r\n  });\r\n\r\n  // eslint-disable-next-line no-await-in-loop\r\n  const { data } = res;\r\n\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const article of data) {\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const articleResult = await axios(\r\n      `https://dev.to/api/articles/${article.id}`\r\n    );\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const articleData = await articleResult.data;\r\n    articles.push({ ...article, ...articleData });\r\n  }\r\n\r\n  articles.forEach(article => {\r\n    const jsonString = JSON.stringify(article);\r\n\r\n    const gatsbyNode = {\r\n      article: Object.assign({}, article),\r\n      id: `${article.id}`,\r\n      parent: \"__SOURCE__\",\r\n      children: [],\r\n      internal: {\r\n        type: \"DevArticles\",\r\n        contentDigest: crypto\r\n          .createHash(\"md5\")\r\n          .update(jsonString)\r\n          .digest(\"hex\")\r\n      }\r\n    };\r\n\r\n    createNode(gatsbyNode);\r\n  });\r\n};\r\n"],"file":"gatsby-node.js"}